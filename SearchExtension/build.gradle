plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.search.extension'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
}

def querydslVersion = '5.0.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    //querydsl.extendsFrom compileClasspath // querydsl step 6 (컴파일이 될때 같이 수행)
}

repositories {
	mavenCentral()
}

dependencies {
    // Spring Boot Web Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Boot Data JPA Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Spring Boot Starter Test - Junit 
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Boot DevTools - Development Only
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Spring Boot Configuration Processor - Annotation Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Log4j2    
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    
    // Lombok - Annotation Processor
    annotationProcessor 'org.projectlombok:lombok'
    // Lombok - Compile Only
    compileOnly 'org.projectlombok:lombok'

    // H2 Database - Runtime Only
    runtimeOnly 'com.h2database:h2'
    //querydsl step 7
	//implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // querydsl 라이브러리
	//annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //  Querydsl 관련 코드 생성 기능 제공
	
	// querydsl 
	//implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	//implementation 'com.querydsl:querydsl-core'
	//implementation 'com.querydsl:querydsl-jpa${queryDslVersion}' // QueryDSL 을 사용하기 위한 라이브러리
	//implementation 'com.querydsl:querydsl-apt${queryDslVersion}' //  QClass 를 생성하기 위한 라이브러리
	
	//implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    //implementation("com.querydsl:querydsl-apt:${queryDslVersion}")
    
	//annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	//  @Entity 어노테이션을 선언한 클래스를 탐색하고, Q 클래스를 생성하게 해주는 라이브러리
	//annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	//annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	
	// Querydsl
	    // QueryDSL
    //implementation "com.querydsl:querydsl-jpa:5.0.0"
    //implementation "com.querydsl:querydsl-core:5.0.0"
    //annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
    
    // Querydsl dependencies
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // This prevents java.lang.NoClassDefFoundError
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // This prevents java.lang.NoClassDefFoundError
  
    
    
    //annotationProcessor("jakarta.persistence:jakarta.persistence-api")
   // annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	// annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa' -> annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta
	// api 'com.querydsl:querydsl-jpa' -> api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	//annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	//annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	
	
    // Jackson Core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    // Jackson Databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    
    // Resilience4j
    implementation 'io.github.resilience4j:resilience4j-all:1.7.1'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'
    implementation 'io.github.resilience4j:resilience4j-reactor:1.7.1'
    // For reactive API
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '3.1.1'
}

tasks.named('test') {
	test {
	    useJUnitPlatform ()
	}
}

// Additional Querydsl configuration
def generated = 'src/main/generated'

// Querydsl - Place QClass files to the specific directory
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// Querydsl - Add QClass file path to the java source set
sourceSets {
    main.java.srcDirs += [ generated ]
}

// Querydsl - Remove QClass directory when doing `gradle clean`
clean {
    delete file(generated)
}
